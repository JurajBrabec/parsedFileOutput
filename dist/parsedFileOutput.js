var y=(c,o)=>()=>(o||c((o={exports:{}}).exports,o),o.exports);var O=y((m,g)=>{var{execFile:_}=require("child_process");g.exports=({file:c,args:o=[],options:l={}})=>{let a=(n=[])=>new Promise((u,i)=>{let s=_(c,[...o,...n],l);s.on("error",i),s.on("spawn",()=>{s.stderr.pipe(s.stdout),u(s.stdout)})}),p=async n=>{let u="";for await(let i of n)u+=i;return u};return n=>(m.asStream=()=>a(n),m.asString=()=>a(n).then(p),m)}});var S=y((F,w)=>{var k=O();w.exports=({file:c,args:o=[],options:l={encoding:"utf8",maxBuffer:1/0},delimiter:a=/\r?\n/})=>{let p=k({file:c,args:o,options:l}),n=async function*(u){let i="";for await(let s of u){let t=(i+s).split(a);i=t.pop();for(let e of t)yield e.trim()}i!==""&&(yield i.trim())};return u=>(F.asSplits=()=>p(u).asStream().then(n),F)}});var E=y((d,A)=>{var x=S();A.exports=({file:c,args:o=[],delimiter:l=/\r?\n/,options:a,parser:p})=>{let n=x({file:c,args:o,options:a,delimiter:l}),u=async function*(t,e){for await(let r of t){let f=e?e(r):r;f&&(yield f)}},i=t=>u(t,p),s=async t=>{let e=[];for await(let r of t)Array.isArray(r)?e.push(...r):e.push(r);return e};return t=>(d.asLoop=()=>n(t).asSplits().then(i),d.asArray=()=>n(t).asSplits().then(i).then(s),d)}});var P=y((I,$)=>{$.exports=({separator:c=",",quote:o='"',fields:l,split:a,assign:p,cast:n})=>{let u=s=>{let t=o,e=c instanceof RegExp?c.source:c,r=new RegExp(`(?<!${t}.{0,255})${e}|${e}(?!.*${t}.*)`);return s.split(r).map(f=>f.trim())},i=s=>Object.entries(l).reduce((t,[e,r],f)=>{typeof r=="string"&&(r={type:r}),r.index!==void 0&&(f=r.index);let h=s[f];if(r.regExp){let q=h.match(r.regExp);h=q?q[1]:void 0}return t[e]=n?n(h,r):h,t},{});return s=>{if(!s)return!1;let t=a?a(s,u):u(s);if(!t)return!1;let e=r=>p?p(r,i):i(r);return Array.isArray(t[0])?t.map(e):e(t)}}});var R=O(),b=S(),j=E(),v=P();module.exports={FileOutput:R,SplitFileOutput:b,ParsedFileOutput:j,Parser:v};
