var m=(u,c)=>()=>(c||u((c={exports:{}}).exports,c),c.exports);var d=m((y,F)=>{var{execFile:k}=require("child_process"),{PassThrough:x}=require("stream");F.exports=({file:u,args:c=[],options:f={encoding:"utf8",maxBuffer:1/0}})=>{let a=(r=[])=>new Promise((e,i)=>{let s=k(u,[...c,...r],f);s.on("error",i),s.on("spawn",()=>{let t=new x;s.stdout.pipe(t),s.stderr.pipe(t),e(t)})}),p=async r=>{let e="";for await(let i of r)e+=i;return e};return(r=[])=>(y.asStream=()=>a(r),y.asString=()=>a(r).then(p),y)}});var w=m((g,O)=>{var I=d();O.exports=({file:u,args:c=[],options:f,delimiter:a=/\r?\n/})=>{let p=I({file:u,args:c,options:f}),r=async function*(e){let i="";for await(let s of e){let t=(i+s).split(a);i=t.pop();for(let n of t)yield n.trim()}i!==""&&(yield i.trim())};return(e=[])=>(g.asSplits=()=>p(e).asStream().then(r),g)}});var P=m((q,E)=>{var R=w();E.exports=({file:u,args:c=[],delimiter:f=/\r?\n/,options:a,parser:p=r=>r})=>{let r=R({file:u,args:c,options:a,delimiter:f}),e=async function*(s){for await(let t of s){let n=p(t);n&&(yield n)}},i=async s=>{let t=[];for await(let n of s)Array.isArray(n)?t.push(...n):t.push(n);return t};return(s=[])=>(q.asItems=()=>r(s).asSplits().then(e),q.asArray=()=>r(s).asSplits().then(e).then(i),q)}});var _=m((z,$)=>{$.exports=({separator:u=",",quote:c='"',fields:f,split:a,assign:p,cast:r})=>{let e=t=>{let n=c,h=u instanceof RegExp?u.source:u,o=new RegExp(`(?<!${n}.{0,255})${h}|${h}(?!.*${n}.*)`);return t.split(o).map(l=>l.trim())},i=t=>Object.entries(f).reduce((n,[h,o],l)=>{typeof o=="string"&&(o={type:o}),o.index!==void 0&&(l=o.index);let S=t[l];if(o.regExp){let A=S.match(o.regExp);S=A?A[1]:void 0}return n[h]=s(S,o),n},{}),s=(t,n)=>r?r(t,n):t;return t=>{if(!t)return!1;let n=a?a(t,e):e(t);if(!n)return!1;let h=o=>p?p(o,i):i(o);return Array.isArray(n[0])?n.map(h):h(n)}}});var b=d(),j=w(),B=P(),T=_();module.exports={FileOutput:b,SplitFileOutput:j,ParsedFileOutput:B,Parser:T};
