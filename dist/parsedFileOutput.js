var y=(u,o)=>()=>(o||u((o={exports:{}}).exports,o),o.exports);var S=y((d,E)=>{var{execFile:k}=require("child_process"),{PassThrough:x}=require("stream");E.exports=({file:u,args:o=[],options:a={}})=>{let p=(n=[])=>new Promise((s,i)=>{let c={encoding:"utf8",maxBuffer:1/0},r=new x,t=k(u,[...o,...n],{...c,...a});t.on("close",f=>{if(r.closed)return;let e=a.timeout?`Error -1 (Terminated after ${a.timeout}ms)`:`Error ${f}`;r.end(e)}),t.on("error",i),t.on("spawn",()=>{t.stdout.pipe(r),t.stderr.pipe(r),s(r)})}),l=async n=>{let s="";for await(let i of n)s+=i;return s};return(n=[])=>(d.asStream=()=>p(n),d.asString=()=>p(n).then(l),d)}});var w=y((g,F)=>{var I=S();F.exports=({file:u,args:o=[],options:a,delimiter:p=/\r?\n/})=>{let l=I({file:u,args:o,options:a}),n=async function*(s){let i="";for await(let c of s){let r=(i+c).split(p);i=r.pop();for(let t of r)yield t.trim()}i!==""&&(yield i.trim())};return(s=[])=>(g.asSplits=()=>l(s).asStream().then(n),g)}});var $=y((q,O)=>{var R=w();O.exports=({file:u,args:o=[],delimiter:a=/\r?\n/,options:p,parser:l=n=>n})=>{let n=R({file:u,args:o,options:p,delimiter:a}),s=async function*(c){for await(let r of c){let t=l(r);t&&(yield t)}},i=async c=>{let r=[];for await(let t of c)Array.isArray(t)?r.push(...t):r.push(t);return r};return(c=[])=>(q.asItems=()=>n(c).asSplits().then(s),q.asArray=()=>n(c).asSplits().then(s).then(i),q)}});var _=y((z,P)=>{P.exports=({separator:u=",",quote:o='"',fields:a,split:p,assign:l,cast:n})=>{let s=r=>{let t=o,f=u instanceof RegExp?u.source:u,e=new RegExp(`(?<!${t}.{0,255})${f}|${f}(?!.*${t}.*)`);return r.split(e).map(h=>h.trim())},i=r=>Object.entries(a).reduce((t,[f,e],h)=>{typeof e=="string"&&(e={type:e}),e.index!==void 0&&(h=e.index);let m=r[h];if(m&&e.regExp){let A=m.match(e.regExp);m=A?A[1]:void 0}return t[f]=c(m,e),t},{}),c=(r,t)=>n?n(r,t):r;return r=>{if(!r)return!1;let t=p?p(r,s):s(r);if(!t)return!1;let f=e=>l?l(e,i):i(e);return Array.isArray(t[0])?t.map(f):f(t)}}});var T=S(),b=w(),j=$(),B=_();module.exports={FileOutput:T,SplitFileOutput:b,ParsedFileOutput:j,Parser:B};
