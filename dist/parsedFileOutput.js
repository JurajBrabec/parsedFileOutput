var m=(c,o)=>()=>(o||c((o={exports:{}}).exports,o),o.exports);var d=m((y,w)=>{var{execFile:k}=require("child_process");w.exports=({file:c,args:o=[],options:l={}})=>{let a=(n=[])=>new Promise((i,r)=>{let e=k(c,[...o,...n],l);e.on("error",r),e.on("spawn",()=>{e.stderr.pipe(e.stdout),i(e.stdout)})}),p=async n=>{let i="";for await(let r of n)i+=r;return i};return n=>(y.asStream=()=>a(n),y.asString=()=>a(n).then(p),y)}});var S=m((F,g)=>{var v=d();g.exports=({file:c,args:o=[],options:l={encoding:"utf8",maxBuffer:1/0},delimiter:a=/\r?\n/})=>{let p=v({file:c,args:o,options:l}),n=async function*(i){let r="";for await(let e of i){let t=(r+e).split(a);r=t.pop();for(let u of t)yield u.trim()}r!==""&&(yield r.trim())};return i=>(F.asSplits=()=>p(i).asStream().then(n),F)}});var $=m((O,E)=>{var x=S();E.exports=({file:c,args:o=[],delimiter:l=/\r?\n/,options:a,parser:p})=>{let n=x({file:c,args:o,options:a,delimiter:l}),i=async function*(t,u){for await(let s of t){let f=u?u(s):s;f&&(yield f)}},r=t=>i(t,p),e=async t=>{let u=[];for await(let s of t)u.push(s);return u};return t=>(O.asLoop=()=>n(t).asSplits().then(r),O.asArray=()=>n(t).asSplits().then(r).then(e),O)}});var _=m((I,P)=>{P.exports=({separator:c=",",quote:o='"',fields:l,split:a,assign:p,cast:n})=>{let i=e=>{let t=o,u=c instanceof RegExp?c.source:c,s=new RegExp(`(?<!${t}.{0,255})${u}|${u}(?!.*${t}.*)`);return e.split(s).map(f=>f.trim())},r=e=>Object.entries(l).reduce((t,[u,s],f)=>{typeof s=="string"&&(s={type:s}),s.index!==void 0&&(f=s.index);let h=e[f];if(s.regExp){let q=h.match(s.regExp);h=q?q[1]:void 0}return t[u]=n?n(h,s):h,t},{});return e=>{if(!e)return!1;let t=a?a(e,i):i(e);return t?p?p(t,r):r(t):!1}}});var A=d(),R=S(),b=$(),j=_();module.exports={FileOutput:A,SplitFileOutput:R,ParsedFileOutput:b,Parser:j};
